/* This source code in this file is licensed to You by Castle Technology
 * Limited ("Castle") and its licensors on contractual terms and conditions
 * ("Licence") which entitle you freely to modify and/or to distribute this
 * source code subject to Your compliance with the terms of the Licence.
 *
 * This source code has been made available to You without any warranties
 * whatsoever. Consequently, Your use, modification and distribution of this
 * source code is entirely at Your own risk and neither Castle, its licensors
 * nor any other person who has contributed to this source code shall be
 * liable to You for any loss or damage which You may suffer as a result of
 * Your use, modification or distribution of this source code.
 *
 * Full details of Your rights and obligations are set out in the Licence.
 * You should have received a copy of the Licence with this source code file.
 * If You have not received a copy, the text of the Licence is available
 * online at www.castle-technology.co.uk/riscosbaselicence.htm
 */
/*
  Title:        bytesex - endianness functions
  Copyright:    (C) 2009, RISC OS Open Limited
*/

#ifndef __bytesex_h
#define __bytesex_h

#ifndef int32
#  define int32 long int
#endif

typedef enum
{
  bytesex_WANT_LITTLE_ENDIAN,
  bytesex_WANT_BIG_ENDIAN
} bytesex_requirement;


extern bytesex_requirement bytesex_host(void);
/*
 * Returns bytesex_WANT_LITTLE_ENDIAN if the current host is little-endian,
 * else return bytesex_WANT_BIG_ENDIAN.
 */

extern void bytesex_reverse(int state);
/*
 * Sets whether byte sex reversing is enabled (nonzero argument) or disabled (zero argument).
 */

extern int bytesex_reversing(void);
/*
 * Returns nonzero if byte sex reversing is enabled.
 */

extern int bytesex_reverse_auto(bytesex_requirement mode);
/*
 * The argument is the endianness of the data that will be passed to
 * bytesex_hostval() - so this function turns on or off byte sex reversing
 * depending upon whether this matches the host's native endianness.
 */

extern int32 bytesex_hostval(int32 value);
/*
 * If byte sex reversing is enabled, this returns its argument with the
 * byte order within the word reversed - else it simply returns the
 * argument.
 */

#endif
